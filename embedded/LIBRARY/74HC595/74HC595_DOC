############################################################
### % 74HC595 <===> spi
############################################################
___________________________________________________________
15      Qa
1~7     Qb ~ Qh     % Qa~Qh八位数据并行输出端
8       GND         % 电源地
9       Q'h         % 串行数据输出管脚(用于芯片的级联)
10      SCLR        % 移位寄存器清零端(MR主复位) Active Low
11      SCK         % 数据输入时钟(SH_CP移位寄存器时钟输入)
12      RCK         % 输出存储器锁存时钟端(ST_CP存储寄存器时钟输入)
13      G           % 输出使能端(OE)  Active Low
14      SI          % 串行数据输入端(Serial data input)
16      VCC         % 电源端
___________________________________________________________


% 74HC595__IO__端口定义
___________________________________________________________
HC595_SCLR    /* % 移位寄存器清零端(1), 低电平有效 */
HC595_SDI     /* % 串行数据输入 */
HC595_SDO     /* % 串行数据输出(Q'h用于芯片间级联) */
HC595_SH_CP   /* % 移位寄存器时钟输入 */ 
HC595_ST_CP   /* % 存储寄存器时钟输入 */
HC595_OE      /* % 8位数据输出使能(0), 低电平有效 */



############################################################
### % 74HC595 <===> driver驱动程序
############################################################
/* % 74HC595初始化 */
void hc595_init(void)
{
    HC595_SCLR  = 1;
    HC595_OE    = 1;
    HC595_SH_CP = 0;
    HC595_ST_CP = 0;
    HC595_SDI   = 0;
}

/* % 单片机向74HC595发送一个字节数据 */
void hc595_driver(uint8_t dat)
{
    uint8_t i;
    /* % 增加抗干扰*/
    HC595_OE    = 1;
    HC595_SH_CP = 0;
    HC595_ST_CP = 0;
    HC595_SDI   = 0;

    for (i = 0; i < 8; i++)
    {
        /* % 第一步，准备数据放到总线上 */
        if (dat >= 0x80)
            HC595_SDI = 1;
        else
            HC595_SDI = 0;
        /* % 第二步，移位寄存器时钟产生上升沿 */
        /* % 数据一位一位的移入移位寄存器中 */
        HC595_SH_CP = 0;
        HC595_SH_CP = 1;
        dat <<= 1;
    }
    
    /* % 第三步，存储寄存器时钟产生上升沿 */
    /* % 上升沿，移位寄存器的数据移到存储寄存器 */
    HC595_ST_CP = 0;
    HC595_ST_CP = 1;
    /* % 第四步，使能输出8位数据端口，OE=0 */
    /* % OE=1，不能输出数据，呈高阻态 */
    HC595_OE    = 0;
    /* % 增加抗干扰 */
    HC595_OE    = 1;
    HC595_SH_CP = 0;
    HC595_ST_CP = 0;
    HC595_SDI   = 0;
}




############################################################
### % 74HC595 <===> 多个芯片级联
############################################################
___________________________________________________________
74HC595_1==========>74HC595_2
HC595_SH_CP-------->HC595_SH_CP
HC595_ST_CP-------->HC595_ST_CP
HC595_SDO---------->HC595_SDI
HC595_SDI            HC595_SDO可以连接到第三片74HC595的输入引脚
___________________________________________________________
/* % 单片机发送两个字节的数据， 分别发到两个芯片中 */
void led_hc595_driver(uint8_t dat_low, uint8_t dat_hig)
{
    uint8_t i, tmp;
    
    /* % 单片机发送高8位数据到总线上 */
    tmp = dat_hig;
    for (i = 0; i < 8; i++)
    {
        /* % 第一步，准备数据放到总线上 */
        if (tmp >= 0x80)
            HC595_SDI = 1;
        else
            HC595_SDI = 0;
        /* % 第二步，移位寄存器时钟产生上升沿 */
        /* % 数据一位一位的移入移位寄存器中 */
        HC595_SH_CP = 0;
        HC595_SH_CP = 1;
        dat <<= 1;
    }
    
    /* % 单片机发送低8位数据到总线上 */
    tmp = dat_low;
    for (i = 0; i < 8; i++)
    {
        /* % 第一步，准备数据放到总线上 */
        if (tmp >= 0x80)
            HC595_SDI = 1;
        else
            HC595_SDI = 0;
        /* % 第二步，移位寄存器时钟产生上升沿 */
        /* % 数据一位一位的移入移位寄存器中 */
        HC595_SH_CP = 0;
        HC595_SH_CP = 1;
        tmp <<= 1;
    }
    
    
    /* % 第三步，存储寄存器时钟产生上升沿 */
    /* % 上升沿，移位寄存器的数据移到存储寄存器 */
    HC595_ST_CP = 0;
    HC595_ST_CP = 1;
    /* % 第四步，使能输出8位数据端口，OE=0 */
    /* % OE=1，不能输出数据，呈高阻态 */
    HC595_OE    = 0;
    /* % 增加抗干扰 */
    HC595_OE    = 1;
    HC595_SH_CP = 0;
    HC595_ST_CP = 0;
    HC595_SDI   = 0;    
}



