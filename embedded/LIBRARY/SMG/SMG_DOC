############################################################
### % LED Segment Displays (7段数码管)
############################################################
/* % 数码管与IO接口 */
/*___________________________________*/
D7   D6   D5   D4   D3   D2   D1   D0
|    |    |    |    |    |    |    |
dp   G    F    E    D    C    B    A



/* % “-”共阴极数码管编码表, 阴极接公共端  */
/*___________________________________*/
uint8_t code table[] = { 
    0x3f,0x06,0x5b,0x4f,
    0x66,0x6d,0x7d,0x07,
    0x7f,0x6f,0x77,0x7c,
    0x39,0x5e,0x79,0x71
};


/* % “+”共阳极数码管编码表, 阳极接公共端  */
/*___________________________________*/
uint8_t code table[] = { 
    0xc0,0xf9,0xa4,0xb0,
    0x99,0x92,0x82,0xf8,
    0x80,0x90,0x88,0x83,
    0xc6,0xa1,0x86,0x8e
};


/* % 共阴极数码管段码表 */
/*___________________________________*/
uint8_t code smg_seg_code[] = { 
    0x3F,   /* % “0” */
    0x06,   /* % “1” */
    0x5B,   /* % “2” */
    0x4F,   /* % “3” */
    0x66,   /* % “4” */
    0x6D,   /* % “5” */
    0x7D,   /* % “6” */
    0x07,   /* % “7” */
    0x7F,   /* % “8” */
    0x6F,   /* % “9” */
    0x77,   /* % “A” */
    0x7C,   /* % “B” */
    0x39,   /* % “C” */
    0x5E,   /* % “D” */
    0x79,   /* % “E” */
    0x71    /* % “F” */
};


/* % 共阳极数码管段码表  */
/*___________________________________*/
uint8_t code smg_seg_code[] = { 
    0xC0,   /* % “0” */
    0xF9,   /* % “1” */
    0xA4,   /* % “2” */
    0xB0,   /* % “3” */
    0x99,   /* % “4” */
    0x92,   /* % “5” */
    0x82,   /* % “6” */
    0xF8,   /* % “7” */
    0x80,   /* % “8” */
    0x90,   /* % “9” */
    0x88,   /* % “A” */
    0x83,   /* % “B” */
    0xC6,   /* % “C” */
    0xA1,   /* % “D” */
    0x86,   /* % “E” */
    0x8E    /* % “F” */
};



############################################################
### % 数码管动态刷新显示 (switch-case)
############################################################
/* 数码管动态显示编程步骤
1 % 送段码
2 % 送位选 
3 % 延时(1ms < 10ms)
4 % 消隐
*/
SMG_SEG P0  /* % P0_数码管段码__IO__ */
SMG_BIT P2  /* % P2_数码管位选__IO__ */
SMG_N   4   /* % 数码管个数 */
/* % 数码管段码表声明 */
uint8_t code smg_seg_code[]; 
/* % 位选信号定义, 低4位 */ 
uint8_t code smg_bit_code[] = {0xfe, 0xfd, 0xfb, 0xf7};
/* % 数据显示缓冲区 */   
uint8_t led_buf[22, 22, 22, 22];

/* % 定义一个窗口变量 */
uint8_t window;
/* % 定义一个参数变量 */
uint8_t parm1 = 44;
uint8_t parm2 = 55;
uint8_t parm3 = 66;
uint8_t parm4 = 77;


/* % 4位数码管动态刷新显示 */
void smg_display(void)
{
    /* % static用它来定义i为静态局部变量 */
    /* % 它只初始化一次，下次再进入这个函数，就不在初始化了 */
    /* % 而是保存的是i上一次调用时的值 */
    static uint8_t i = 0;
    switch (i)
    {
        case 0:             /* % 第 1 位数码管 */
            /* % 段码 */
            SMG_SEG = smg_seg_code[led_buf[0]];
            /* % 位选 */
            SMG_BIT = smg_bit_code[0];
            /* % 延时 */
            delay_ms(1);
            /* % 消隐 */
            SMG_SEG = 0x00;
            i++;
            break;
        case 1:             /* % 第 2 位数码管 */
            SMG_SEG = smg_seg_code[led_buf[1]];
            SMG_BIT = smg_bit_code[1];
            delay_ms(1);
            SMG_SEG = 0x00;
            i++;
            break;
        case 2:             /* % 第 3 位数码管 */
            SMG_SEG = smg_seg_code[led_buf[2]];
            SMG_BIT = smg_bit_code[2];
            delay_ms(1);
            SMG_SEG = 0x00;
            i++;
            break;
        case 3:             /* % 第 4 位数码管 */
            SMG_SEG = smg_seg_code[led_buf[3]];
            SMG_BIT = smg_bit_code[3];
            delay_ms(1);
            SMG_SEG = 0x00;
            i = 0;
            break;
        default: 
            break;
    }
}


/* % 分时显示多个窗口，数码管动态刷新 */
/* % 定义4个窗口， 分时刷新显示 */
void smg_more_window_display(void)
{
    uint16_t i;
    switch (window)
    {
    case 0:                     /* % 窗口 1 */
        led_buf[0] = 0;         /* % 第一个数码管显示“0”, 表示第1个窗口 */
        led_buf[1] = 22;        /* % 第二个数码管显示“-” */
        led_buf[2] = parm1/10;  /* % 第三个数码管显示“” */
        led_buf[3] = parm1%10;  /* % 第四个数码管显示“” */
        for (i = 0; i < 5000; i++)
            smg_display();      /* % 动态刷新四个数码管显示“” */
        window++;               /* % 跳转到下一个窗口 */
        break;
    case 1:                     /* % 窗口 2 */
        led_buf[0] = 1;         /* % 第一个数码管显示“1”, 表示第2个窗口 */
        led_buf[1] = 22;        /* % 第二个数码管显示“-” */
        led_buf[2] = parm2/10;  /* % 第三个数码管显示“” */
        led_buf[3] = parm2%10;  /* % 第四个数码管显示“” */
        for (i = 0; i < 5000; i++)
            smg_display();      /* % 动态刷新四个数码管显示“” */
        window++;               /* % 跳转到下一个窗口 */
        break;
    case 2:                     /* % 窗口 3 */
        led_buf[0] = 2;         /* % 第一个数码管显示“2”, 表示第3个窗口 */
        led_buf[1] = 22;        /* % 第二个数码管显示“-” */
        led_buf[2] = parm3/10;  /* % 第三个数码管显示“” */
        led_buf[3] = parm3%10;  /* % 第四个数码管显示“” */
        for (i = 0; i < 5000; i++)
            smg_display();      /* % 动态刷新四个数码管显示“” */
        window++;               /* % 跳转到下一个窗口 */
        break;
    case 3:                     /* % 窗口 4 */
        led_buf[0] = 3;         /* % 第一个数码管显示“3”, 表示第4个窗口 */
        led_buf[1] = 22;        /* % 第二个数码管显示“-” */
        led_buf[2] = parm4/10;  /* % 第三个数码管显示“” */
        led_buf[3] = parm4%10;  /* % 第四个数码管显示“” */
        for (i = 0; i < 5000; i++)
            smg_display();      /* % 动态刷新四个数码管显示“” */
        window = 0;             /* % 跳转到第一个窗口 */
        break;
    default: 
        break;
    }
}





