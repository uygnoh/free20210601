############################################################
### % % https://www.silabs.com/       (freeysh)(weihong)
############################################################



############################################################
### % 空闲任务
############################################################
% uC/OS-II预定义了 2 个为应用程序服务的系统任务 (空闲任务和统计任务)
void OSTaskIdle(void *pdata)
{
        pdata = pdata;                  //防止编译器报错
        
        for (;;) {
                OS_ENTER_CRITICAL();    //关闭中断
                OSIdleCtr++;            //计数
                OS_EXIT_CRITICAL();     //开启中断
        }
}



############################################################
### % uCOS-II 任务状态
############################################################
1 % 无条件挂起一个任务( OSTaskSupend(任务优先级) )
当任挂起后，只有其它任务才能唤醒被挂起的任务。任务挂起后，系统会重新
进行任务调度，运行下一个优先级最高的就绪任务。唤醒挂起任务需要调用函
数( OSTaskResume(任务优先级) )


2 % 删除一个uCOS中的任务( OSTaskDelReq(任务优先级) )
删除一个任务，一般情况下是自己删除自己。如果任务A直接调用( OSTask_Del(任务优先级) ) 
函数来直接删除任务B，任务B占用的资源得不到释放，系统最后会没有内存可用。所以当任务A
想要删除任务B，会先调用( OSTask_DelReq(任务优先级) )函数来请求任务B删除自己，比如
任务B的优先级是10，即调用( OSTask_DelReq(10) )
任务B会通过( OSTask_DelReq(INT8U prio) )函数查询是否有其它任务请求删除自己，若有，
则释放自己占用的资源，内存，调用( OSTask_Del(OS_PRIO_SELF) )来删除自己。



############################################################
### % uCOS-II任务优先级
############################################################
uCOS-II把任务的优先权分为 64 个优先级别，每一个级别都用一个数字来表示
“0”表示任务的优先级别为最高，数字越大则表示任务的优先级别越低。
OS_LOWEST_PRIO          % 任务优先级别定义



############################################################
### % uCOS-II任务堆栈
############################################################
//定义堆栈长度
#define TASK_STK_SIZE           512

//定义一个数组来作为任务堆栈
OS_STK TaskStk[TASK_STK_SIZE];
