############################################################
### 变量使用
############################################################
// 全局变量前缀： global_

// 局部变量
tmp		临时变量
flag		标志
pos		位置
ret		返回值
size		大小
num		数字
len		长度

// UART通信
uart_tx_buf[];
uart_rx_buf[];


// IIC通信
iic_tx_buf[];
iic_rx_buf[];


// SPI通信
spi_tx_buf[];
spi_rx_buf[];


// CAN通信
can_tx_buf[];
can_rx_buf[];



############################################################
### 编程规范
############################################################
________________________________
1 //  缩进
________________________________
Tab的宽度是八个字符，因此缩进的宽度也是八个字符


________________________________
2 // switch-case 对齐
________________________________
switch (suffix) {
case 'a':
case 'g':
case 'm':
default:
	break;
}


________________________________
2 // 换行
________________________________
单行的宽度限制为八十列，这是强烈推荐的设置
不要把多个赋值语句放在同一行，内核的代码风
格是十分简洁的，请尽量避免使用复杂的表达式


________________________________
3 // 括号与空格
________________________________
// 在一个循环中和条件判断中
// 超过一行语句，也需要使用括号
// (if, switch, for, while, do)
if (x is true) {
        we do y
}
// 然而，有一个特殊的例子，就是函数：
// 函数的左括号应该放在行首：
int function(int x)
{
	body of function
}
// 注意到，右括号一般是单独成一行的，
// 除非右括号之后紧随着紧密结合的语句，
// 例如 do-while 语句和 if 语句：
do {
	body of do-loop
} while (condition);


// 所以需要在下面这些关键字之后添加一个空格：
if, switch, case, for, do, while
// 但是不要在下面这些关键字之后添加一个空格：
sizeof, typeof, alignof, attribute
// 不要在括号周围多此一举的添加空格，下面这个例子糟透了： 警告！
s = sizeof( struct file );
// 在声明指针或者返回值为指针的函数时，星号的位置
// 应该紧靠着变量名或函数名，而不是类型名，例如：
char *linux_banner;
unsigned long long memparse(char *ptr, char **retptr);
char *match_strdup(substring_t *s);
// 在二元操作符和三元操作符周围添加一个空格，例如：
=  +  -  <  >  *  /  %  |  &  ^  <=  >=  ==  !=  ?  :
// 但是不要在一元操作符之后添加空格： 警告！
&  *  +  -  ~  !  sizeof  typeof  alignof  __attribute__  defined
// 不要在后缀的自增自减一元操作符之前添加空格： 警告！
++  --
// 不要在前缀的自增自减一元操作符之后添加空格： 警告！
++  --
// 不要在结构体成员操作符周围添加空格： 警告！
.  ->
